// Code generated by "gors -service BytesString"; DO NOT EDIT.
package demo

import (
	gin "github.com/gin-gonic/gin"
	render "github.com/gin-gonic/gin/render"
	gors "github.com/go-leo/gors"
	io "io"
	http "net/http"
)

func BytesStringRoutes(srv BytesString) []gors.Route {
	return []gors.Route{
		{
			HTTPMethod: http.MethodGet,
			Path:       "/api/BytesString/Get",
			HandlerFunc: func(c *gin.Context) {
				var req []byte
				var resp string
				var err error
				var body []byte
				body, err = io.ReadAll(c.Request.Body)
				if err != nil {
					c.String(http.StatusBadRequest, err.Error())
					_ = c.Error(err).SetType(gin.ErrorTypeBind)
					return
				}
				req = body
				ctx := gors.NewContext(c)
				resp, err = srv.GetBytesString(ctx, req)
				if err != nil {
					if httpErr, ok := err.(*gors.HttpError); ok {
						c.String(httpErr.StatusCode(), httpErr.Error())
						_ = c.Error(err).SetType(gin.ErrorTypePublic)
						return
					}
					c.String(http.StatusInternalServerError, err.Error())
					_ = c.Error(err).SetType(gin.ErrorTypePrivate)
					return
				}
				statusCode := gors.GetCodeFromContext(ctx)
				c.Render(statusCode, render.Data{ContentType: "text/html; charset=utf-8", Data: []byte(resp)})
			},
		},
		{
			HTTPMethod: http.MethodPut,
			Path:       "/api/BytesString/Put",
			HandlerFunc: func(c *gin.Context) {
				var req []byte
				var resp string
				var err error
				var body []byte
				body, err = io.ReadAll(c.Request.Body)
				if err != nil {
					c.String(http.StatusBadRequest, err.Error())
					_ = c.Error(err).SetType(gin.ErrorTypeBind)
					return
				}
				req = body
				ctx := gors.NewContext(c)
				resp, err = srv.PutBytesString(ctx, req)
				if err != nil {
					if httpErr, ok := err.(*gors.HttpError); ok {
						c.String(httpErr.StatusCode(), httpErr.Error())
						_ = c.Error(err).SetType(gin.ErrorTypePublic)
						return
					}
					c.String(http.StatusInternalServerError, err.Error())
					_ = c.Error(err).SetType(gin.ErrorTypePrivate)
					return
				}
				statusCode := gors.GetCodeFromContext(ctx)
				c.Redirect(statusCode, resp)
			},
		},
	}
}
