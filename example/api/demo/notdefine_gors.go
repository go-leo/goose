// Code generated by "gors -service NotDefine -path_to_lower"; DO NOT EDIT.

package demo

import (
	gin "github.com/gin-gonic/gin"
	gors "github.com/go-leo/gors"
	io "io"
	http "net/http"
)

func NotDefineRoutes(srv NotDefine, opts ...gors.Option) []gors.Route {
	options := gors.NewOptions(opts...)
	return []gors.Route{
		gors.NewRoute(http.MethodGet, "/demo.notdefine/string", _NotDefine_String_Handler(srv, options)),
		gors.NewRoute(http.MethodGet, "/demo.notdefine/bytes", _NotDefine_Bytes_Handler(srv, options)),
		gors.NewRoute(http.MethodGet, "/demo.notdefine/reader", _NotDefine_Reader_Handler(srv, options)),
		gors.NewRoute(http.MethodGet, "/demo.notdefine/notdefine", _NotDefine_NotDefine_Handler(srv, options)),
	}
}

func _NotDefine_String_Handler(srv NotDefine, options *gors.Options) func(c *gin.Context) {
	return func(c *gin.Context) {
		var rpcMethodName = "/demo.NotDefine/String"
		var ctx = gors.NewContext(c, rpcMethodName)
		var req string
		var resp string
		var err error
		if err = gors.RequestBind(
			ctx, &req, options.Tag,
			gors.StringBinding,
		); err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		resp, err = srv.String(ctx, req)
		if err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "", gors.StringRender, options.ResponseWrapper)
	}
}

func _NotDefine_Bytes_Handler(srv NotDefine, options *gors.Options) func(c *gin.Context) {
	return func(c *gin.Context) {
		var rpcMethodName = "/demo.NotDefine/Bytes"
		var ctx = gors.NewContext(c, rpcMethodName)
		var req []byte
		var resp []byte
		var err error
		if err = gors.RequestBind(
			ctx, &req, options.Tag,
			gors.BytesBinding,
		); err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		resp, err = srv.Bytes(ctx, req)
		if err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "", gors.BytesRender, options.ResponseWrapper)
	}
}

func _NotDefine_Reader_Handler(srv NotDefine, options *gors.Options) func(c *gin.Context) {
	return func(c *gin.Context) {
		var rpcMethodName = "/demo.NotDefine/Reader"
		var ctx = gors.NewContext(c, rpcMethodName)
		var req io.Reader
		var resp io.Reader
		var err error
		if err = gors.RequestBind(
			ctx, &req, options.Tag,
			gors.ReaderBinding,
		); err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		resp, err = srv.Reader(ctx, req)
		if err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "", gors.ReaderRender, options.ResponseWrapper)
	}
}

func _NotDefine_NotDefine_Handler(srv NotDefine, options *gors.Options) func(c *gin.Context) {
	return func(c *gin.Context) {
		var rpcMethodName = "/demo.NotDefine/NotDefine"
		var ctx = gors.NewContext(c, rpcMethodName)
		var req *NotDefineReq
		var resp *NotDefineResp
		var err error
		req = new(NotDefineReq)
		if err = gors.RequestBind(
			ctx, req, options.Tag,
			gors.QueryBinding,
		); err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		resp, err = srv.NotDefine(ctx, req)
		if err != nil {
			gors.ErrorRender(ctx, err, options.ErrorHandler, options.ResponseWrapper)
			return
		}
		gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "application/json", gors.JSONRender, options.ResponseWrapper)
	}
}
